jobs:
  include:
    - stage: Test
      language: csharp
      dist: xenial
      mono: none
      dotnet: 2.2
      services:
        - xvfb
      addons:
        chrome: stable
      install: 
        - dotnet clean
        - dotnet restore
      script:
        - dotnet build 
        - dotnet run --project Chat.Web/Chat.Web.csproj &>/dev/null &
        - bash Scripts/wait-until-service-is-up.sh
        - xvfb-run --server-args="-screen 0 1024x768x24" dotnet test Chat.Tests
        - killall dotnet -9

    - language: node_js
      node_js:
        - 10.15.0
      before_install:
        - cd Chat.Web/Client/
      install:
        - npm install
      script:
        - npm test

    - stage: Deploy
      language: minimal
      services:
        - docker
      env:
        - RELEASE_NUMBER=1.0.$TRAVIS_BUILD_NUMBER
      script:
        - docker build --file ./Dockerfile . --tag framebassman/chat:$RELEASE_NUMBER
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - docker push framebassman/chat
      before_deploy:
        - git config --local user.name $GIT_USERNAME
        - git config --local user.email $GIT_EMAIL
        - git tag $RELEASE_NUMBER
      deploy:
        provider: releases
        api_key: $GITHUB_OAUTH_TOKEN
        skip_cleanup: true

stages:
  - Test
  - name: Deploy
    if: branch = master AND type != pull_request
branches:
  only:
    - /.*/
notifications:
  email: false
  slack: kolenkainc:$SLACK_TOKEN
